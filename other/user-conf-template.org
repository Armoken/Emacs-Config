* Theme
** Global theme
   #+BEGIN_SRC emacs-lisp
     (use-package spacemacs-theme
         :ensure t
         :no-require t
         :pin melpa
         :init
         (if (daemonp)
                 (add-hook 'after-make-frame-functions
                           (lambda (frame)
                               (select-frame frame)
                               (load-theme 'spacemacs-dark t)))
             (load-theme 'spacemacs-dark t)
             (add-hook 'org-mode-hook
                       (lambda ()
                           (set-face-attribute 'org-link nil :height 1.2)
                           (set-face-attribute 'org-level-1 nil :height 1.2)
                           (set-face-attribute 'org-level-2 nil :height 1.2)
                           (set-face-attribute 'org-level-3 nil :height 1.2)
                           (set-face-attribute 'org-level-4 nil :height 1.2)
                           (set-face-attribute 'org-level-5 nil :height 1.2)
                           (set-face-attribute 'org-level-6 nil :height 1.2)
                           (set-face-attribute 'org-level-7 nil :height 1.2)
                           (set-face-attribute 'org-level-8 nil :height 1.2)))))
   #+END_SRC

** Modeline theme
   #+BEGIN_SRC emacs-lisp
     (use-package spaceline
       :ensure t
       :config
       (progn
         (require 'spaceline-config)

         ;; Spaceline themes: arrow, arrow-fade, bar, box, brace,
         ;; butt, chamfer, contour, curve,
         ;; rounded, roundstub, slant, wave, zigzag, nil,
         (setq powerline-default-separator 'arrow-fade)

         (spaceline-toggle-buffer-size-off)
         (setq powerline-height 21)

         ;; Hide anzu mode, because with spaceline it will desplayed twice
         (setq anzu-cons-mode-line-p nil)

         ;; HUD: shows the currently visible part of the buffer.
         (spaceline-toggle-hud-off)

         ;; buffer-position: shows the current position in the buffer
         ;; as a percentage.
         (spaceline-toggle-buffer-position-off)

         (spaceline-define-segment my-current-line
           "The current line number."
           (if (eq major-mode 'pdf-view-mode)
               (spaceline--pdfview-page-number)
             (concat
              "%l/"
              (int-to-string (count-lines (point-min) (point-max)))
              ":%2c")))

         (spaceline-toggle-line-column-off)
         (spaceline-toggle-buffer-encoding-abbrev-off)
         (spaceline-spacemacs-theme 'my-current-line)))

     (use-package spaceline-all-the-icons
       :ensure t
       :after spaceline)
   #+END_SRC

** Paren hightlighting
   #+BEGIN_SRC emacs-lisp
     (custom-set-faces
      '(show-paren-match ((t (:background "purple4"))))
      '(show-paren-mismatch
     ((((class color)) (:background "red" :foreground "white")))))
   #+END_SRC
** Highlighting indentation
      #+BEGIN_SRC emacs-lisp
        (add-hook 'highlight-indentation-mode
              (lambda ()
                (set-face-background 'highlight-indentation-face "#e3e3d3")
                (set-face-background
                 'highlight-indentation-current-column-face "#c3b3b3")))
   #+END_SRC

* Font
  #+BEGIN_SRC emacs-lisp
    (setq default-frame-alist '((font . "Hack-10")))
  #+END_SRC

* User personal info
  #+BEGIN_SRC emacs-lisp
  (setq user-full-name "Armoken")
  (setq user-mail-address "Alex.Armoken@gmail.com")
  #+END_SRC

* C/C++
  Select "irony", "ccls", "gtags" for some editor part.

  #+BEGIN_SRC emacs-lisp
    (setq cc-eldoc-plugin                         "ccls")
    (setq cc-syntax-check-plugin                  "ccls")
    (setq cc-autocompletion-plugin                "ccls")
  #+END_SRC

* Shell
  Set default shell for shell mode
   #+BEGIN_SRC emacs-lisp
     (setq explicit-shell-file-name "/bin/bash")
     (setq shell-file-name "bash")
     (setq explicit-bash.exe-args '("--noediting" "--login" "-i"))
     (setenv "SHELL" shell-file-name)
  #+END_SRC
